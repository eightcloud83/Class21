<html>
<head>
<style>
    .mTerm {
        font-weight: bold;
        color: blue;
    }
</style>
</head>
<pre>


在 C 裏, 有關整數的內建型態是 char, short, int, long,
這些整數含有負數,
而對應的 unsigned char, unsigned short, unsigned int, unsigned long 則是自然數(0 + 正整數).

在 C 的原始設計裏, 是希望 int 是跟 CPU 的 bit 數 (指 CPU 指令一次處理的 bit 數) 是一樣,
short 比 int 少, long 比 int 長, char 固定是 8 bit,
但實際上, 在 64bit 的 cpu, int 還是 32 bit, 就算是 long 也還是 32bit, 而用 long long 代表 64bit,  <a href="#digicomputer">#1</a>
在新版本的compiler裏,
會用
#include &lt;stdint.h&gt;

  uint8_t  (=unsigned char)
  uint16_t (=unsinged short)
  uint32_t (=unsigned int)
  uint64_t (=unsinged long long 之類)
  代表用不同 bit 數代表示非負整數(<del>正整數</del>). (unsigned 意思是沒正負號, 代表非負整數(<del>全是正的</del>,0 不是正整數,<a href="#digicomputer">#2</a>自然數))

uint8_t   0~0xff                0~                       255 (K=1024, M=1024K, G=1024M, T=1024G) 
uint16_t  0~0xffff              0~                    65,535 (64K=256*256)
uint32_t  0~0xffffffff          0~             4,294,967,295 ( 4G=64K*64K=4096*K*K=4096M)
uint64_t  0~0xffffffffffffffff  0~18,446,744,073,709,551,615 (   = 4G*4G)  (https://en.wikipedia.org/wiki/Integer_overflow)

以下是用 C(/cpp) 程式列出來的一個結果.
<a href="https://github.com/eightcloud83/Class21/blob/master/week1/TypeUInt/main.cpp">https://github.com/eightcloud83/Class21/blob/master/week1/TypeUInt/main.cpp</a>
<img src="210516_uint_c.png" width="1024" />
****
binary          hex     decimal
00000001        0x01      1
00000010        0x02      2
00000011        0x03      3
00000111        0x07      7
00001000        0x08      8
00001001        0x09      9
00001010        0x0a     10
00001011        0x0b     11
00001111        0x0f     15
00010000        0x10     16
00010100        0x14     20
01100100        0x64    100
11001000        0xc8    200
11111111        0xff    255

uint8_t (unsigned char)
最小值  =00000000       0x00      0
最大值  =11111111       0xff    255
最小值-1=11111111       0xff    255
最大值+1=00000000       0x00      0

uint16_t (unsigned short)
最小值  =0000000000000000       0x0000       0
最大值  =1111111111111111       0xffff   65535
最小值-1=1111111111111111       0xffff   65535
最大值+1=0000000000000000       0x0000       0

uint32_t (unsigned int)
最小值  =00000000000000000000000000000000       0x00000000                0
最大值  =11111111111111111111111111111111       0xffffffff       4294967295
最小值-1=11111111111111111111111111111111       0xffffffff       4294967295
最大值+1=00000000000000000000000000000000       0x00000000                0

--
補充
<a name="int_bits">#1
int bits
http://www.crasseux.com/books/ctutorial/Integer-variables.html
https://dada.tw/2008/04/18/85/

long long 
http://www.cplusplus.com/forum/lounge/234539/
1. long long is "since C++11" in http://en.cppreference.com/w/cpp/language/types#Integer_types
2. long long is "since C99" in http://en.cppreference.com/w/c/language/arithmetic_types#Integer_types
so there is your history: C got it first, in 1999, then C++ picked it up in its next major revision, in 2011.
</a>
--

</pre>
</html>
